<?php

namespace App\Controllers;

use App\Entities\Database\Object\BaseObjectEntity;
use App\Enums\ESchoolroomActions;
use App\Models\Database\SchoolroomDatabase;
use App\Models\Facade\SchoolroomFacade;
use App\Utilities\ActionMapper;
use App\Utilities\Login;
use App\Utilities\RedirectUtils;
use Tracy\Debugger;
use Tracy\Logger;

class SchoolroomController extends BaseController
{
	public const VIEW_GRID = "src/Views/Schoolroom/grid.latte";
	public const VIEW_EDIT = "src/Views/Schoolroom/edit.latte";
	private $schoolroomFacade;

	public function __construct($latte)
	{
		parent::__construct($latte, new ESchoolroomActions());
		$this->schoolroomFacade = new SchoolroomFacade(new SchoolroomDatabase());
	}

	public function show(string $path = self::VIEW_EDIT, $args = [])
	{
		$args['selectNames'] = $this->schoolroomFacade->getTypeNamesForSelect();
		return parent::show($path, $args); // TODO: Change the autogenerated stub
	}

	public function getLatte()
	{
		return parent::getLatte(); // TODO: Change the autogenerated stub
	}

	public function getUser(): Login
	{
		return parent::getUser(); // TODO: Change the autogenerated stub
	}

	public function actionGrid()
	{
		$gridValues = $this->schoolroomFacade->getAllSchoolrooms();
		$args["gridvalues"] = $gridValues;
		$this->show(self::VIEW_GRID, $args);
	}

	public function actionEdit()
	{
		$variablesGet = $_GET;
		$variablesPost = $_POST;
		if (!empty($variablesPost) && !empty($variablesGet))
		{
			bdump("postnget");
			bdump($variablesGet);
			bdump($variablesPost);
			$id = $this->saveForm($variablesPost);
			$this->redirectEdit($id);
		}
		if (!empty($variablesPost))
		{
			bdump("post");
			bdump($variablesGet);
			bdump($variablesPost);
			$id = $this->saveForm($variablesPost);
			$this->redirectEdit($id);
		}
		if (!empty($variablesGet))
		{
			bdump("get");
			bdump($variablesGet);
			bdump($variablesPost);
			$this->loadForm($variablesGet);
		}
	}

	private function saveForm($variables)
	{
		return $this->schoolroomFacade->saveSchoolroom($variables);
	}

	private function loadForm($variables)
	{
		$args['formData'] = $this->schoolroomFacade->getSchoolroomById($variables[BaseObjectEntity::BASE_ID]);
		$this->show(self::VIEW_EDIT, $args);
	}

	private function redirectEdit($id)
	{
		RedirectUtils::redirectWithURLBuild(ESchoolroomActions::edit(), [BaseObjectEntity::BASE_ID => $id]);
	}

}